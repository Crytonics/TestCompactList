name: Generate status labels

permissions:
  contents: write
  issues: read

on:
  schedule:
    - cron: '0 0 * * *' # Runs every day at midnight
  workflow_dispatch:

jobs:
  update-badge:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Count Issues
      id: count_issues
      run: |
        declare -A label_counts
        labels=("status-playable++" "status-playable--" "status-ingame++" "status-ingame--" "status-boots" "status-nothing" "status-menus")
        
        for label in "${labels[@]}"; do
          label_counts[$label]=$(gh issue list --label "$label" --state open --json number --jq 'length' || echo 0)
        done
        
        TOTAL_COUNT=$(IFS=+; echo "$((${label_counts[*]}))")
        PLAYABLE_COUNT=$((${label_counts["status-playable++"]} + ${label_counts["status-playable--"]}))
        INGAME_COUNT=$((${label_counts["status-ingame++"]} + ${label_counts["status-ingame--"]}))
        
        declare -A counts
        counts[playable]=$PLAYABLE_COUNT
        counts[ingame]=$INGAME_COUNT
        counts[boots]=${label_counts["status-boots"]}
        counts[nothing]=${label_counts["status-nothing"]}
        counts[menus]=${label_counts["status-menus"]}
        
        for key in "${!counts[@]}"; do
          echo "::set-output name=${key}_count::${counts[$key]}"
          percent=$((${counts[$key]} * 100 / TOTAL_COUNT))
          echo "::set-output name=${key}_percent::$percent"
        done
        
        echo "Total number of issues: $TOTAL_COUNT"
        for key in "${!counts[@]}"; do
          echo "${key^} count: ${counts[$key]}"
        done

    - name: Update README.md
      run: |
        for status in playable ingame boots nothing menus; do
          count="${{ steps.count_issues.outputs.${status}_count }}"
          percent="${{ steps.count_issues.outputs.${status}_percent }}"
          sed -i "s/${status^}-[0-9]*_(.*%25)/${status^}-${count}_(${percent}%25)/" README.md
        done

    - name: Generate compat-stats.json
      run: |
        echo '{}' > compat-stats.json
        for status in playable ingame boots nothing menus; do
          count="${{ steps.count_issues.outputs.${status}_count }}"
          percent="${{ steps.count_issues.outputs.${status}_percent }}"
          jq --arg status "status-$status" \
             --arg count "$count" \
             --arg percent "$percent" \
             '.[$status] = {count: ($count | tonumber), percentage: $percent}' \
             compat-stats.json > temp.json && mv temp.json compat-stats.json
        done

    - name: Check for new issues
      id: check_for_new_issues
      run: |
        if git diff --exit-code > /dev/null; then
          echo "::set-output name=changed::false"
          echo "No new issues detected"
        else
          echo "::set-output name=changed::true"
          echo "New issues detected"
        fi

    - name: Commit status labels
      if: steps.check_for_new_issues.outputs.changed == 'true'
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add README.md compat-stats.json
        git commit -m "Generate status labels $(date +'%Y-%m-%d')"
        git push